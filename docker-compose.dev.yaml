services:
  redis:
    image: valkey/valkey:latest
    ports:
      - "6379:6379"
    hostname: redis
    command: redis-server --appendonly yes
    volumes:
      - cache-data:/data
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    restart: unless-stopped
    env_file:
      - .env.dev
    logging:
      options:
        max-size: 10m
        max-file: "3"
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 1s
      timeout: 3s
      retries: 30
  minio:
    env_file:
      - .env.dev
    container_name: minio
    image: minio/minio:latest
    volumes:
      - ./data:/data
    ports:
      - "9100:9000"
      - "9090:9001"
    restart: always      
    environment:
      MINIO_ROOT_USER: "${MINIO_ROOT_USER}"
      MINIO_ROOT_PASSWORD: "${MINIO_ROOT_PASSWORD}"             
      MINIO_BUCKET: "${MINIO_BUCKET}"      
    command: server /data --console-address :9001 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-client:
    env_file:
      - .env.dev
    container_name: minio-client
    restart: always
    image: minio/mc:latest
    volumes:
      - config:/root/.mc
    depends_on:
      - minio

    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host rm minio;
      /usr/bin/mc config host add --quiet --api s3v4 minio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}; 
      sleep infinity;
      "
volumes:
  cache-data: {}
  config: {}